services:
  # Qbittorrent instance for downloading torrents.
  qbittorrent:
    image: ghcr.io/hotio/qbittorrent:latest
    hostname: qbittorrent
    container_name: qbittorrent
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ./config/wireguard/wg0.conf:/config/wireguard/wg0.conf
      - ./config/qbittorrent:/config
      - type: bind
        source: "./data/torrents"
        target: /data/torrents
    environment:
      TZ: Etc/Utc
      PUID: 1000
      PGID: 1000
      WEBUI_PORTS: 8080/tcp,8080/udp
      VPN_ENABLED: "true"
      VPN_CONF: wg0
      VPN_PROVIDER: generic 
      VPN_LAN_NETWORK: 192.168.0.0/24
      VPN_LAN_LEAK_ENABLED: "false"
      VPN_AUTO_PORT_FORWARD: "false"
      VPN_KEEP_LOCAL_DNS: "false"
      VPN_FIREWALL_TYPE: auto
      VPN_HEALTHCHECK_ENABLED: "true"
      PRIVOXY_ENABLED: "true"
      UNBOUND_ENABLED: "false"
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=1
      
  # FlareSolverr instance for bypassing CloudFlare.
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    hostname: flaresolverr
    restart: always
    ports:
      - 127.0.0.1:8191:8191
    environment:
      TZ: Etc/Utc
      LOG_LEVEL: "info"
  sonarr-hd:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr-hd
    hostname: sonarr-hd
    restart: always
    ports:
      - 8989:8989
    volumes:
      - "./config//sonarr-hd:/config"
      - type: bind
        source: ./data
        target: /data
    environment:
      TZ: Etc/Utc
      PUID: 1000
      PGID: 1000
    depends_on:
      - qbittorrent

  # Sonarr instance for grabbing 4K TV shows.
#  sonarr-4k:
#    image: lscr.io/linuxserver/sonarr:latest
#    container_name: sonarr-4k
#    hostname: sonarr-4k
#    restart: always
#    ports:
#      - 8990:8989
#    volumes:
#      - "./config/sonarr-4k:/config"
#      - type: bind
#        source: ./data
#        target: /data
#    environment:
#      TZ: Etc/Utc
#      PUID: 1000
#      PGID: 1000
#    depends_on:
#      - qbittorrent
  radarr-hd:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr-hd
    hostname: radarr-hd
    restart: always
    ports:
      - 7878:7878
    volumes:
      - "./config/radarr-hd:/config"
      - type: bind
        source: ./data
        target: /data
    environment:
      TZ: Etc/Utc
      PUID: 1000
      PGID: 1000
    depends_on:
      - qbittorrent
#  radarr-4k:
#    image: lscr.io/linuxserver/radarr:latest
#    container_name: radarr-4k
#    hostname: radarr-4k
#    restart: always
#    ports:
#      - 7870:7878
#    volumes:
#      - "./config/radarr-4k:/config"
#      - type: bind
#        source: ./data
#        target: /data
#    environment:
#      TZ: Etc/Utc
#      PUID: 1000
#      PGID: 1000
#    depends_on:
#      - qbittorrent
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    hostname: prowlarr
    restart: always
    ports:
      - 9696:9696
    volumes:
      - "./config/prowlarr:/config"
    environment:
      TZ: Etc/Utc
      PUID: 1000
      PGID: 1000
    depends_on:
      - qbittorrent
      - flaresolverr
      - sonarr-hd
#      - sonarr-4k
      - radarr-hd
#      - radarr-4k
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    hostname: jellyseerr
    environment:
      TZ: Etc/Utc
    ports:
      - 5055:5055
    volumes:
      - ./config/jellyseerr:/app/config
    restart: unless-stopped
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
#      - JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
    volumes:
      - ./config/jellyfin:/config
      - ./data/media:/data/media
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    restart: unless-stopped
  recyclarr:
    image: ghcr.io/recyclarr/recyclarr
    container_name: recyclarr
    user: 1000:1000
    volumes:
      - ./config/recyclarr:/config
    environment:
      - RECYCLARR_CREATE_CONFIG: true
      - TZ: Etc/Utc