---
services:
  qbittorrent:
    container_name: qbittorrent
    image: ghcr.io/hotio/qbittorrent
    ports:
      - "8080:8080"
    environment:
      PUID: 911 #TODO
      PGID: 911
      # UMASK: 002
      TZ: Etc/UTC
      PRIVOXY_ENABLED: true
      UNBOUND_ENABLED: false
      WEBUI_PORTS: 8080/tcp,8080/udp
      VPN_ENABLED: true
      VPN_CONF: wg0
      VPN_PROVIDER: generic 
      VPN_LAN_NETWORK: 192.168.0.0/24
      VPN_LAN_LEAK_ENABLED: "false"
      VPN_AUTO_PORT_FORWARD: "false"
      VPN_KEEP_LOCAL_DNS: "false"
      VPN_FIREWALL_TYPE: auto
      VPN_HEALTHCHECK_ENABLED: "true"
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      # - net.ipv6.conf.all.disable_ipv6=1
    volumes:
      - ./qBittorrent.conf:/config/config/qBittorrent.conf:ro
      - /etc/wireguard/wg0.conf:/config/wireguard/wg0.conf
      - ./.config/qbittorrent:/config
      - "{{ arrstack_data_dir }}/arrstack/torrents:/data/torrents"
    restart: unless-stopped
    # user: 911:911
    # tmpfs: #TODO
      # - /run:exec
    # read_only: true
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    depends_on:
      - qbittorrent
    environment:
      # PUID: 0
      # PGID: 0
      TZ: Etc/UTC
      SONARR__AUTH__APIKEY: "{{ arrstack_apikey }}"
      SONARR__AUTH__METHOD: External
    volumes:
      - ./.config/sonarr:/config
      - "{{ arrstack_data_dir }}/arrstack/:/data/" # optional be sure to chmod +777 data dir to allow abc to write to it 
    ports:
      - 8989:8989
    restart: unless-stopped
    tmpfs:
      - /run:exec
    read_only: true
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    depends_on:
      - qbittorrent
    environment:
      # PUID: 0
      # PGID: 0
      TZ: Etc/UTC
      RADARR__AUTH__APIKEY: "{{ arrstack_apikey }}"
      RADARR__AUTH__METHOD: External
    volumes:
      - ./.config/radarr:/config
      - "{{ arrstack_data_dir }}/arrstack/media/movies:/data/movies" #optional
      - "{{ arrstack_data_dir }}/arrstack/torrents:/data/downloads" #optional
    ports:
      - 7878:7878
    restart: unless-stopped
    tmpfs:
      - /run:exec
    read_only: true
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    depends_on:
      byparr:
        condition: service_healthy
    environment:
      # PUID: 1000
      # PGID: 1000
      TZ: Etc/UTC
      PROWLARR__AUTH__APIKEY: "{{ arrstack_apikey }}"
      PROWLARR__AUTH__METHOD: External
    volumes:
      - ./.config/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    tmpfs:
      - /run:exec
    read_only: true
  # flaresolverr: # broken untill further notice
    # image: ghcr.io/flaresolverr/flaresolverr:latest
    # container_name: flaresolverr
    # restart: unless-stopped
  byparr:
    image: ghcr.io/thephaseless/byparr
    container_name: byparr
    restart: unless-stopped
    healthcheck:
      test: curl --fail localhost:8191/docs || exit 1
      start_period: 13s
    # read_only: true
    # tmpfs: 
      # - /tmp
      # - /root
      # - /.extemsions
  recyclarr:
    image: ghcr.io/recyclarr/recyclarr
    container_name: recyclarr
    depends_on:
      - sonarr
      - radarr
    volumes:
      - ./.config/recyclarr:/config
      - ./recyclarr.yml:/config/recyclarr.yml:ro
    environment:
      TZ: Etc/UTC
      RECYCLARR_CREATE_CONFIG: true
      SONARR_URL: http://sonarr:8989
      RADARR_URL: http://radarr:7878
      SONARR_APIKEY: "{{ arrstack_apikey }}"
      RADARR_APIKEY: "{{ arrstack_apikey }}"
    security_opt: ['no-new-privileges:true']
    read_only: true
    tmpfs: /tmp
      
  recyclarr-oneshot:
    image: ghcr.io/recyclarr/recyclarr
    container_name: recyclarr-oneshot
    read_only: true
    tmpfs: /tmp
    depends_on:
      - sonarr
      - radarr
    volumes:
      - ./recyclarr.yml:/config/recyclarr.yml:ro
    environment:
      TZ: Etc/UTC
      RECYCLARR_CREATE_CONFIG: true
      SONARR_URL: http://sonarr:8989
      RADARR_URL: http://radarr:7878
      SONARR_APIKEY: "{{ arrstack_apikey }}"
      RADARR_APIKEY: "{{ arrstack_apikey }}"
    command: sync
    security_opt: ['no-new-privileges:true']
    
  flemmarr:
    container_name: flemmarr
    image: pierremesure/flemmarr:latest
    read_only: true
    depends_on:
      - sonarr
      - radarr
      - prowlarr
    volumes:
      - ./flemmarr.yml:/config/config.yml:ro
