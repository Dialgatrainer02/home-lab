---
- name: Initial setup
  hosts: all:!laptop
  vars_files:
    ../variables.yml
  tasks:
    - name: Enable makecache timer
      ansible.builtin.systemd_service:
        name: dnf-makecache.timer
        state: started
        enabled: true
      become: true
    - name: Edit dnf config
      ansible.builtin.blockinfile:
        path: /etc/dnf/dnf.conf
        prepend_newline: true
        block: |
          fastestmirror=true
          max_parallel_downloads=10
      become: true
    - name: Remove firewalld
      ansible.builtin.dnf:
        name: firewalld
        state: absent
      become: true
    - name: System update
      ansible.builtin.dnf:
        name:
          - "*"
        state: latest
        update_only: true
      become: true
      throttle: 3
      tags:
        - update
    - name: Install packages
      ansible.builtin.dnf:
        name:
          - tar
          - yum-utils
          - nftables
        state: present
      become: true
      throttle: 3
      tags:
        - nftables
        - bootstrap
    - name: Add nftable rules
      ansible.builtin.template:
        src: ../templates/homelab-ruleset.nft.j2 # noqa: no-relative-paths
        dest: /etc/nftables.nft
        owner: root
        group: root
        mode: "0644"
      become: true
      tags:
        - nftables
    - name: Check nftables is started
      ansible.builtin.systemd_service:
        name: nftables
        state: started
        enabled: true
      become: true
      tags:
        - nftables
    - name: Apply firewall rules
      ansible.builtin.command:
        cmd: nft -f /etc/nftables.nft
      become: true
      register: result
      changed_when: result.rc != 0
      tags:
        - nftables
    - name: System update
      ansible.builtin.dnf:
        name:
          - "*"
        state: latest
        update_only: true
      become: true
      throttle: 3
      tags:
        - update
    - name: Check if nodes need rebooting
      ansible.builtin.command:
        cmd: needs-restarting -r
      register: result
      changed_when: result.rc == 1
      ignore_errors: true
    - name: Reboot if needed
      ansible.builtin.reboot:
      become: true
      when: result.rc == 1
  tags:
    - setup
